# Generated by Django 5.1.3 on 2024-12-11 02:11

import backend.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChessEngine',
            fields=[
                ('engine_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('url', models.CharField(max_length=1000, unique=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=2500, null=True)),
                ('elo', models.IntegerField(default=1000)),
            ],
            options={
                'db_table': 'chessengines',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('is_online', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=20, null=True)),
                ('surname', models.CharField(max_length=20, null=True)),
                ('nationality', models.CharField(max_length=30, null=True)),
                ('elo', models.IntegerField(default=1000)),
                ('description', models.CharField(max_length=2500, null=True)),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('tournament_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('player_count', models.IntegerField(default=8)),
                ('is_ranked', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=30)),
                ('format_data', models.JSONField(blank=True, default=backend.models.Tournament.default_format_data, null=True)),
                ('restrictions_data', models.JSONField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=2500, null=True)),
                ('chat', models.CharField(blank=True, max_length=10000, null=True)),
                ('winner_name', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournaments', to='backend.user')),
            ],
            options={
                'db_table': 'tournaments',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_ranked', models.BooleanField(default=True)),
                ('format_data', models.JSONField(blank=True, default=backend.models.Game.default_format_data, null=True)),
                ('restrictions_data', models.JSONField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('chat', models.CharField(blank=True, max_length=10000, null=True)),
                ('result', models.CharField(blank=True, max_length=50, null=True)),
                ('player_black_substitute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_as_black_substitute', to='backend.chessengine')),
                ('player_white_substitute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_as_white_substitute', to='backend.chessengine')),
                ('player_black', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_as_black', to='backend.user')),
                ('player_white', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_as_white', to='backend.user')),
            ],
            options={
                'db_table': 'games',
            },
        ),
        migrations.AddField(
            model_name='chessengine',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engines', to='backend.user'),
        ),
        migrations.CreateModel(
            name='Move',
            fields=[
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='moves', serialize=False, to='backend.game')),
                ('move_number', models.IntegerField()),
                ('move_time', models.DateTimeField()),
                ('coordinate_move', models.CharField(max_length=5)),
                ('san_move', models.CharField(max_length=20)),
                ('fen_position', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'moves',
                'unique_together': {('game', 'move_number')},
            },
        ),
        migrations.CreateModel(
            name='TournamentGame',
            fields=[
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='games', serialize=False, to='backend.tournament')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_games', to='backend.game')),
            ],
            options={
                'db_table': 'tournamentgames',
                'unique_together': {('tournament', 'game')},
            },
        ),
        migrations.CreateModel(
            name='TournamentParticipant',
            fields=[
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='participants', serialize=False, to='backend.tournament')),
                ('score', models.FloatField(default=0.0)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_participations', to='backend.user')),
                ('player_substitute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tournament_substitutions', to='backend.chessengine')),
            ],
            options={
                'db_table': 'tournamentparticipants',
                'unique_together': {('tournament', 'player')},
            },
        ),
    ]
